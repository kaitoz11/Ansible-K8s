---
- hosts: master, worker
  name: Setup master node (Control plane)
  become: true
  tasks:
    - name: Disable swap
      shell: swapoff -a

    - name: Remove swap entry from /etc/fstab
      lineinfile:
        dest: /etc/fstab
        regexp: swap
        state: absent

    - name: Load br_netfilter module
      shell: |
        cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
        br_netfilter
        EOF

    - name: Overlaying
      shell: modprobe overlay
    
    - name: Enable Linux kernel's netfilter framework to operate on bridged traffic
      shell: modprobe br_netfilter

    - name: Configure iptables to see bridged traffic
      shell: |
        cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
        net.bridge.bridge-nf-call-iptables  = 1
        net.bridge.bridge-nf-call-ip6tables = 1
        net.ipv4.ip_forward                 = 1
        EOF

    - name: Read values from all system directories
      shell: sysctl --system

    - name: Check if file exists
      stat:
        path: /path/to/file
      register: file_stat

    - name: Check if containerd is running
      shell: systemctl is-active containerd
      register: containerd_status
      ignore_errors: true

    - debug:
        msg: "Containerd is running"
      when: containerd_status.stdout == "active"

    - debug:
        msg: "Containerd is not running"
      when: containerd_status.stdout != "active"

    - name: Download containerd
      get_url:
        url: https://github.com/containerd/containerd/releases/download/v1.6.8/containerd-1.6.8-linux-amd64.tar.gz
        dest: /home/k4it0z11/
      when: containerd_status.stdout != "active"

    - name: Download runc
      get_url:
        url: https://github.com/opencontainers/runc/releases/download/v1.1.3/runc.amd64
        dest: /home/k4it0z11/
      when: containerd_status.stdout != "active"
        
    - name: Download cni plugins
      get_url:
        url: https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-amd64-v1.1.1.tgz
        dest: /home/k4it0z11/
      when: containerd_status.stdout != "active"
      
    - name: Install Container Runtime (Containerd)
      shell: |
        tar Cxzvf /usr/local containerd-1.6.8-linux-amd64.tar.gz;
        install -m 755 runc.amd64 /usr/local/sbin/runc;
        mkdir -p /opt/cni/bin;
        tar Cxzvf /opt/cni/bin cni-plugins-linux-amd64-v1.1.1.tgz;
        rm runc.amd64 containerd-1.6.8-linux-amd64.tar.gz cni-plugins-linux-amd64-v1.1.1.tgz
      when: containerd_status.stdout != "active"

    - name: Configure containerd
      shell: |
        mkdir -p /etc/containerd;
        containerd config default | tee /etc/containerd/config.toml;
        sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml;
        curl -L https://raw.githubusercontent.com/containerd/containerd/main/containerd.service -o /etc/systemd/system/containerd.service;
        systemctl daemon-reload;
        systemctl restart containerd;
      when: containerd_status.stdout != "active"

    - name: Update apt packages
      apt:
        update_cache: "yes"
        force_apt_get: "yes"

    - name: Add Google Cloud public signing key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Add Kubernetes repository
      apt_repository:
        repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes
        mode: 0600
    
    - name: Install kubelet, kubeadm
      apt:
        name:
          - kubeadm=1.26.0-00
          - kubelet=1.26.0-00
        state: present
    
    - name: Enable kubelet service
      service:
        name: kubelet
        enabled: yes

- hosts: master
  name: Init cluster
  become: true
  tasks:
    - name: Install kubectl
      apt:
        name:
          - kubectl=1.26.0-00
        state: present

    - name: Reset existing cluster
      shell: kubeadm reset -f

    - name: Remove .kube in user home directory
      shell: rm -rf .kube

    - name: Remove /etc/kubernetes/manifests directory
      shell: rm -rf /etc/kubernetes/manifests

    - name: Remove /var/lib/etcd directory
      shell: rm -rf /var/lib/etcd

    - name: Init kubernetes cluster
      shell: kubeadm init --control-plane-endpoint=192.168.1.12:6443 --upload-certs --apiserver-advertise-address=192.168.1.12 --pod-network-cidr=192.168.0.0/16

    - name: Copy Calico manifest file
      copy:
        src: ../calico/calico.yaml
        dest: /home/k4it0z11/calico.yaml
        owner: k4it0z11
        group: k4it0z11
        mode: '0644'

    - name: Deploy network
      shell: kubectl --kubeconfig=/etc/kubernetes/admin.conf apply -f calico.yaml

    - name: Print join command
      shell: kubeadm token create --print-join-command
      register: kubernetes_join_command

    - name: Copy join command to local
      become: false
      local_action: copy content="{{ kubernetes_join_command.stdout_lines[0] }}" dest="/tmp/kubernetes_join_command" mode=0777

    - name: Create directory for kube config
      file:
        path: /home/k4it0z11/.kube
        state: directory
        owner: k4it0z11
        group: k4it0z11
        mode: 0755

    - name: Copy /etc/kubernetes/admin.conf to user home directory
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/k4it0z11/.kube/config
        remote_src: yes
        owner: k4it0z11
        group: k4it0z11
        mode: '0644'

    # Because of https://github.com/kubernetes/kubernetes/issues/60835#issuecomment-395931644
    - name: Edit kubeadm.conf
      blockinfile:
        path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
        block: |
          Environment="KUBELET_EXTRA_ARGS=--node-ip={{ inventory_hostname }}"
    - name: Restart kubelet service
      service:
        name: kubelet
        daemon-reload: yes
        state: restarted

- hosts: worker
  name: Join workers
  become: true
  tasks:
    - name: Reset existing cluster
      shell: kubeadm reset -f

    - name: Remove .kube in user home directory
      shell: rm -rf .kube

    - name: Remove /etc/kubernetes/manifests directory
      shell: rm -rf /etc/kubernetes/manifests

    - name: Copy join command to workers
      copy:
        src: /tmp/kubernetes_join_command
        dest: /tmp/kubernetes_join_command
        mode: 0777

    - name: Execute worker join command
      shell: sh /tmp/kubernetes_join_command

    # Because of https://github.com/kubernetes/kubernetes/issues/60835#issuecomment-395931644
    - name: Edit kubeadm.conf
      blockinfile:
        path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
        block: |
          Environment="KUBELET_EXTRA_ARGS=--node-ip={{ inventory_hostname }}"
    - name: Restart kubelet service
      service:
        name: kubelet
        daemon-reload: yes
        state: restarted